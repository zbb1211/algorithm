// 给定一个整数 n，返回 n! 结果尾数中零的数量。

// 示例 1:

// 输入: 3
// 输出: 0
// 解释: 3! = 6, 尾数中没有零。
// 示例 2:

// 输入: 5
// 输出: 1
// 解释: 5! = 120, 尾数中有 1 个零.

// 尾数的0怎么来的？
// 在1-9的范围内，只有2*5=10,会产生0。在阶乘中，2的倍数肯定比5的倍数多，因此0的个数与5的尾数相关
// 以20的阶乘为例：20！的阶乘中，5的倍数有四个：5， 10， 15， 20
// 5  = 5 * 1 //数字范围在5-9之间的阶乘，产生(1)个0
// 10 = 5 * 2 // 数字范围在10-14之间的阶乘，产生(1 + 2)个0
// 15 = 5 * 3 // 数字范围在15-19之间的阶乘，产生(1 + 2 + 3)个0
// 20 = 5 * 4 // 数字范围在20-24之间的阶乘，产生(1 + 2 + 3 + 4)个0

var trailingZeroes = n => {
  let res = 0;
  while (n > 5) {
    let k = Math.floor(n / 5);
    res += k;
    n = k;
  }
  return res;
}
